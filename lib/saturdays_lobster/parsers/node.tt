grammar Node
  include Utility

  rule node
    '(' space? inner_node space? ')'
  end

  rule inner_node
    variable:word? labels space? hash:('{' space? properties space? '}')?
  end

  rule labels
    l:(label)* {
      def eval
        l.elements.map(&:word).map(&:text_value).map(&:to_sym)
      end
    }
  end

  rule label
    ':' word
  end

  rule properties
    property space? tail:(',' space? property)* {
      def eval
        hash = {}
        ([property] + tail.elements.map(&:property)).each { |t|
          hash[t.key.text_value.to_sym] = Kernel.eval t.value.text_value
        }
        hash
      end
    }
  end

  rule property
    key:word space? ':' space? value:value
  end

  rule value
    string / number
  end
end
